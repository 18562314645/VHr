<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.EmployeetrainMapper" >
  <resultMap id="BaseResultMap" type="org.javaboy.vhr.model.Employeetrain" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="trainDate" property="traindate" jdbcType="DATE" />
    <result column="trainContent" property="traincontent" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>


  <resultMap id="AllEmployeeTrainInfo" type="org.javaboy.vhr.model.Employeetrain" extends="BaseResultMap">

    <association property="department" javaType="org.javaboy.vhr.model.Department">
      <id column="did" property="id"/>
      <result column="dname" property="name"/>
    </association>

    <association property="employee" javaType="org.javaboy.vhr.model.Employee">
      <id column="eid" property="id"/>
      <result column="ename" property="name"/>
      <result column="gender" property="gender"/>
      <result column="workID" property="workID"/>
    </association>
  </resultMap>


  <sql id="Base_Column_List" >
    id, eid, trainDate, trainContent, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.javaboy.vhr.model.Employeetrain" >
    insert into employeetrain (id, eid, trainDate, 
      trainContent, remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{traindate,jdbcType=DATE}, 
      #{traincontent,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.javaboy.vhr.model.Employeetrain" >
    insert into employeetrain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="traindate != null" >
        trainDate,
      </if>
      <if test="traincontent != null" >
        trainContent,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="traindate != null" >
        #{traindate,jdbcType=DATE},
      </if>
      <if test="traincontent != null" >
        #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.model.Employeetrain" >
    update employeetrain
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="traindate != null" >
        trainDate = #{traindate,jdbcType=DATE},
      </if>
      <if test="traincontent != null" >
        trainContent = #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.model.Employeetrain" >
    update employeetrain
    set eid = #{eid,jdbcType=INTEGER},
      trainDate = #{traindate,jdbcType=DATE},
      trainContent = #{traincontent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询培训员工列表-->
  <select id="getEmployeeTrainByPage" resultMap="AllEmployeeTrainInfo">
      SELECT
        et.id AS id,
        em.id AS eid,
        em.`name` AS ename,
        em.workID AS workID,
        em.gender AS gender,
        de.id AS  did,
        de.`name` AS dname,
        et.trainDate AS trainDate,
        et.trainContent AS trainContent,
        et.remark AS remark
      FROM

            employee em, department de, employeetrain et
            WHERE em.id=et.eid AND em.departmentId=de.id
    <if test="employeetrain.employee!=null and employeetrain.department!=null">
	      <if test="employeetrain.employee.name!=null and employeetrain.employee.name!=''">
              AND em.name like concat('%',#{employeetrain.employee.name},'%')
          </if>
    </if>
          <if test="page !=null and size!=null">
            limit #{page},#{size}
          </if>
  </select>

  <!--查询培训员工总记录数-->
  <select id="getTotal" resultType="java.lang.Long">
    SELECT COUNT(*) FROM employee em, employeetrain et
        <where>
            em.id=et.eid
            <if test="employeetrain.employee !=null">
              <if test="employeetrain.employee.name!=null and employeetrain.employee.name!=''">
                AND em.name like concat('%',#{employeetrain.employee.name},'%')
              </if>
            </if>
        </where>
  </select>
</mapper>